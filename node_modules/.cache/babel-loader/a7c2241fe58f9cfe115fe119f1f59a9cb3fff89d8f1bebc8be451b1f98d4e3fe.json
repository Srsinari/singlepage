{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jkcshop\\\\Desktop\\\\BD\\\\my-portfolio\\\\src\\\\components\\\\intro\\\\birthday.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { calculateTimeDifference } from './cal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BirthdayPage() {\n  _s();\n  const herBirthdate = '1994-09-17'; // Replace with her actual birthdate\n  const herBirthTime = '05:21:00'; // Replace with her actual time of birth\n\n  const [timeDifference, setTimeDifference] = useState(0);\n  useEffect(() => {\n    // Function to update the time difference\n    const updateTimeDifference = () => {\n      const difference = calculateTimeDifference(herBirthdate, herBirthTime);\n      setTimeDifference(difference);\n    };\n\n    // Initial update\n    updateTimeDifference();\n\n    // Update the time difference every second (1000 milliseconds)\n    const intervalId = setInterval(updateTimeDifference, 1000);\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [herBirthdate, herBirthTime]);\n  const millisecondsInSecond = 1000;\n  const millisecondsInMinute = 60 * 1000;\n  const millisecondsInHour = 60 * 60 * 1000;\n  const millisecondsInDay = 24 * 60 * 60 * 1000;\n  const years = Math.floor(timeDifference / (millisecondsInDay * 365));\n  const months = Math.floor(timeDifference % (millisecondsInDay * 365) / (millisecondsInDay * 30));\n  const days = Math.floor(timeDifference % (millisecondsInDay * 30) / millisecondsInDay);\n  const hours = Math.floor(timeDifference % millisecondsInDay / millisecondsInHour);\n  const minutes = Math.floor(timeDifference % millisecondsInHour / millisecondsInMinute);\n  const seconds = Math.floor(timeDifference % millisecondsInMinute / millisecondsInSecond);\n\n  // Convert milliseconds to years, months, days, hours, minutes, and seconds\n  // (same as previous code)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontFamily: \"'Playfair Display', serif\",\n        color: \"rgba(244, 6, 137, 0.905)\",\n        fontSize: \"17px\"\n      },\n      children: [\"Happy Birthday to the one who entered this world  \", years, \" years,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 71\n      }, this), months, \" months, \", days, \" days,\", hours, \" hours, \", minutes, \" minutes, and \", seconds, \" seconds ago!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(BirthdayPage, \"CcSWzvzvhusGR3g8dkwetW7xp/Q=\");\n_c = BirthdayPage;\nexport default BirthdayPage;\nvar _c;\n$RefreshReg$(_c, \"BirthdayPage\");","map":{"version":3,"names":["React","useState","useEffect","calculateTimeDifference","jsxDEV","_jsxDEV","BirthdayPage","_s","herBirthdate","herBirthTime","timeDifference","setTimeDifference","updateTimeDifference","difference","intervalId","setInterval","clearInterval","millisecondsInSecond","millisecondsInMinute","millisecondsInHour","millisecondsInDay","years","Math","floor","months","days","hours","minutes","seconds","children","style","fontFamily","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jkcshop/Desktop/BD/my-portfolio/src/components/intro/birthday.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { calculateTimeDifference } from './cal.js';\r\n\r\nfunction BirthdayPage() {\r\n  const herBirthdate = '1994-09-17'; // Replace with her actual birthdate\r\n  const herBirthTime = '05:21:00'; // Replace with her actual time of birth\r\n\r\n  const [timeDifference, setTimeDifference] = useState(0);\r\n\r\n  useEffect(() => {\r\n     // Function to update the time difference\r\n     const updateTimeDifference = () => {\r\n        const difference = calculateTimeDifference(herBirthdate, herBirthTime);\r\n        setTimeDifference(difference);\r\n      };\r\n  \r\n      // Initial update\r\n      updateTimeDifference();\r\n  \r\n      // Update the time difference every second (1000 milliseconds)\r\n      const intervalId = setInterval(updateTimeDifference, 1000);\r\n  \r\n      // Cleanup the interval when the component unmounts\r\n      return () => clearInterval(intervalId);\r\n    }, [herBirthdate, herBirthTime]);\r\n\r\n  const millisecondsInSecond = 1000;\r\n  const millisecondsInMinute = 60 * 1000;\r\n  const millisecondsInHour = 60 * 60 * 1000;\r\n  const millisecondsInDay = 24 * 60 * 60 * 1000;\r\n\r\n  const years = Math.floor(timeDifference / (millisecondsInDay * 365));\r\n  const months = Math.floor((timeDifference % (millisecondsInDay * 365)) / (millisecondsInDay * 30));\r\n  const days = Math.floor((timeDifference % (millisecondsInDay * 30)) / millisecondsInDay);\r\n  const hours = Math.floor((timeDifference % millisecondsInDay) / millisecondsInHour);\r\n  const minutes = Math.floor((timeDifference % millisecondsInHour) / millisecondsInMinute);\r\n  const seconds = Math.floor((timeDifference % millisecondsInMinute) / millisecondsInSecond);\r\n\r\n  // Convert milliseconds to years, months, days, hours, minutes, and seconds\r\n  // (same as previous code)\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <p style={{fontFamily:\"'Playfair Display', serif\", color:\"rgba(244, 6, 137, 0.905)\", fontSize:\"17px\"}}>\r\n      Happy Birthday to the one who entered this world  {years} years,<br/>\r\n       {months} months, {days} days,{hours} hours, {minutes} minutes,\r\n        and {seconds} seconds ago!\r\n      </p>\r\n      {/* Add your birthday wishes here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BirthdayPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,YAAY,GAAG,YAAY,CAAC,CAAC;EACnC,MAAMC,YAAY,GAAG,UAAU,CAAC,CAAC;;EAEjC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACb;IACA,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;MAChC,MAAMC,UAAU,GAAGV,uBAAuB,CAACK,YAAY,EAAEC,YAAY,CAAC;MACtEE,iBAAiB,CAACE,UAAU,CAAC;IAC/B,CAAC;;IAED;IACAD,oBAAoB,CAAC,CAAC;;IAEtB;IACA,MAAME,UAAU,GAAGC,WAAW,CAACH,oBAAoB,EAAE,IAAI,CAAC;;IAE1D;IACA,OAAO,MAAMI,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACN,YAAY,EAAEC,YAAY,CAAC,CAAC;EAElC,MAAMQ,oBAAoB,GAAG,IAAI;EACjC,MAAMC,oBAAoB,GAAG,EAAE,GAAG,IAAI;EACtC,MAAMC,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EACzC,MAAMC,iBAAiB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EAE7C,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACb,cAAc,IAAIU,iBAAiB,GAAG,GAAG,CAAC,CAAC;EACpE,MAAMI,MAAM,GAAGF,IAAI,CAACC,KAAK,CAAEb,cAAc,IAAIU,iBAAiB,GAAG,GAAG,CAAC,IAAKA,iBAAiB,GAAG,EAAE,CAAC,CAAC;EAClG,MAAMK,IAAI,GAAGH,IAAI,CAACC,KAAK,CAAEb,cAAc,IAAIU,iBAAiB,GAAG,EAAE,CAAC,GAAIA,iBAAiB,CAAC;EACxF,MAAMM,KAAK,GAAGJ,IAAI,CAACC,KAAK,CAAEb,cAAc,GAAGU,iBAAiB,GAAID,kBAAkB,CAAC;EACnF,MAAMQ,OAAO,GAAGL,IAAI,CAACC,KAAK,CAAEb,cAAc,GAAGS,kBAAkB,GAAID,oBAAoB,CAAC;EACxF,MAAMU,OAAO,GAAGN,IAAI,CAACC,KAAK,CAAEb,cAAc,GAAGQ,oBAAoB,GAAID,oBAAoB,CAAC;;EAE1F;EACA;;EAEA,oBACEZ,OAAA;IAAAwB,QAAA,eAEExB,OAAA;MAAGyB,KAAK,EAAE;QAACC,UAAU,EAAC,2BAA2B;QAAEC,KAAK,EAAC,0BAA0B;QAAEC,QAAQ,EAAC;MAAM,CAAE;MAAAJ,QAAA,GAAC,oDACrD,EAACR,KAAK,EAAC,SAAO,eAAAhB,OAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnEb,MAAM,EAAC,WAAS,EAACC,IAAI,EAAC,QAAM,EAACC,KAAK,EAAC,UAAQ,EAACC,OAAO,EAAC,gBAChD,EAACC,OAAO,EAAC,eACf;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAAC9B,EAAA,CAjDQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAmDrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}